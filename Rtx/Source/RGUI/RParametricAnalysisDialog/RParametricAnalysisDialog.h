// Last modified by Mojtaba on June 30, 2012

#ifndef RParametricAnalysisDialog_H
#define RParametricAnalysisDialog_H

#include <QDialog>
#include "ui_RParametricAnalysisDialog.h"

class RDomain;
class RFunction;
class RParameter;
class RAnalyzer;

using namespace Ui;

class RParametricAnalysisDialog : public QDialog, public RParametricAnalysisDialogUi
{
	Q_OBJECT

public:
	RParametricAnalysisDialog(QWidget *parent = 0, RDomain *passedDomain = 0);
	~RParametricAnalysisDialog();

	// Sets the Domain object
	void setDomain(RDomain *passedDomain);

private slots:
	// Method tat is invoked when the OK button is clicked on
	void onOkButtonClicked();

	// Method tat is invoked when the Browse button is clicked on
	void browse();

	// Method tat is invoked when the FunctionGroupBox is clicked on, which enables "Function Evaluation" section in the dialog box and disables the AnalyzerGroupBox
	void onFunctionGroupBoxClicked(bool checked);

	// Method tat is invoked when the AnalyzerGroupBox is clicked on, which enables the "Other Analysis Types" section in the dialog box and disables the FunctionGroupBox
	void onAnalyzerGroupBoxClicked(bool checked);

	// Slot that is trigerred when a sub-window is added to the main window: Using this, the title of the plots generated by anaylsis tools can be modified
	void onSubWindowAdded(QWidget *subWindow);

private:
	// Runs the parametric analysis
	int analyze(QList<RParameter *> passedParameterList, QVector<double> passedMinimumVector, QVector<double> passedMaximumVector, QVector<int> passedCountVector, QList<RFunction *> passedFunctionList, RAnalyzer *passedAnalyzer);

	// Pointer to the Domain object
	RDomain *theDomain;

	// A string that contains the name and the value of the parameters int the current analysis
	QString theCurrentParameterValuesStr;

};

#endif // RParametricAnalysisDialog_H
